.text
    .type hex2dec, @function
    .globl hex2dec

hex2dec:
    addiu   $sp, $sp, -16           # buffer
    li      $t0, 10                 # t0: i = 10
    sb      $zero, 12($sp)          # buffer[12] = '\0'
    li      $t1, 10                 # t1: '\n'
    sb      $t1, 11($sp)            # buffer[11] = '\n'

    bnez    $a0, loop               # if (n != 0) goto loop
    li      $t1, 48                 # t1: '0'
    sb      $t1, 10($sp)            # buffer[i] = '0'
    addiu   $t0, $t0, -1            # i--

loop:
    divu    $a0, 10                 # a0: n = n / 10
    mfhi    $t1                     # t1: n % 10
    addiu   $t1, $t1, 48            # t1: (n % 10) + '0'
    addu    $t2, $sp, $t0           # t2: &buffer[i]
    sb      $t1, 0($t2)             # buffer[i] = (n % 10) + '0'
    addiu   $t0, $t0, -1            # i--
    bgtz    $a0, loop               # while (n > 0) goto loop

    addiu   $t0, $t0, 1             # i++

    subu    $t1, $zero, $t0         # t1: - i
    addiu   $t1, $t1, 12            # t1: 12 - i

# output:
    li      $v0, 4004               # v0: sys_write
    li      $a0, 1                  # a0: stdout
    addu    $a1, $sp, $t0           # a1: &buffer[i]
    move    $a2, $t1                # a2: length
    syscall

    addiu   $sp, $sp, 16            # buffer
    jr      $ra


# Generated by Copilot
# void hex2dec(uint32_t n) {
#     char buffer[16];
#     int i = 10;
#     buffer[12] = '\0';
#     buffer[11] = '\n';

##    if (n == 0) {
#         buffer[i] = '0';
#         i--;
#     } else {
#         do {
#             buffer[i] = (n % 10) + '0';
#             n /= 10;
#             i--;
#         } while (n > 0);
#     }
#     i++;

#     length = 12 - i;
#     write(1, &buffer[i], length);
# }
